name: Test native launchers
on:
  push:
    branches:
    - master

jobs:

  test-native-launchers:
    strategy:
      fail-fast: false
      matrix:
        OS: [ubuntu-latest, windows-latest, macos-latest]
    runs-on: ${{ matrix.OS }}
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
          submodules: true
      - uses: coursier/cache-action@v6
      - uses: laughedelic/coursier-setup@v1
        with:
          jvm: graalvm-ce-java11:20.1.0
          apps: sbt-launcher ammonite
      - run: sbt 'set version in ThisBuild := "2.0-SNAPSHOT"' jvmProjects/publishLocal
        shell: bash
      - run: amm launcher.sc generateNativeImage --version "2.0-SNAPSHOT" --output cs-test
        if: runner.os != 'Windows'
        shell: bash
      - run: .github/scripts/windows-build-native-image.bat
        if: runner.os == 'Windows'
        shell: bash
      - run: sbt -J-Dcoursier-test-launcher=./cs-test cli-tests/test
        shell: bash

  test-linux-arm64-native-launcher:
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
          submodules: true
      - uses: coursier/cache-action@v6
      - uses: laughedelic/coursier-setup@v1
        with:
          jvm: 8
          apps: sbt-launcher coursier
      - run: sbt cli/pack
        shell: bash
      - uses: uraimo/run-on-arch-action@v2.0.5
        with:
          arch: aarch64
          distro: ubuntu20.04

          # Speeds up builds per the run-on-arch-action README
          githubToken: ${{ github.token }}

          setup: |
            mkdir -p output
            tar -zxf "$(cs get https://github.com/graalvm/graalvm-ce-builds/releases/download/vm-20.1.0/graalvm-ce-java11-linux-aarch64-20.1.0.tar.gz)"
            mkdir -p utils
            cp "$(cs get https://github.com/coursier/coursier/releases/download/v2.0.7/coursier)" utils/coursier
            chmod +x utils/coursier

          dockerRunArgs: |
            --volume "${PWD}/output:/output"
            --volume "${PWD}/utils:/utils"
            --volume "${PWD}/graalvm-ce-java11-20.1.0:/jvm"

          env: |
            JAVA_HOME: /jvm
            PGP_PASSPHRASE: ${{ secrets.PGP_PASSPHRASE }}
            PGP_SECRET: ${{ secrets.PGP_SECRET }}

          # The shell to run commands with in the container
          shell: /bin/bash

          # build-essential and libz-dev are required to build native images.
          # git is required by some of the launcher.sc logic.
          # python3-pip is required for some CLI tests.
          install: |
            apt-get update -q -y
            apt-get install -q -y build-essential libz-dev git python3-pip

          run: |
            export PATH="/utils:$JAVA_HOME/bin:$PATH"
            coursier launch --fork ammonite:2.1.4-11-307f3d8 --scala 2.12.12 --java-opt -Xmx4g -- launcher.sc generateNativeImage --output /output/cs-test
            coursier launch sbt-launcher --property coursier-test-launcher=/output/cs-test -- cli-tests/test
